-----------------------------------------------------------------------------

usbjtag - Variations on the implementation of a USB JTAG adapter.

Copyright (C) 2005,2006 Kolja Waschk, ixo.de

-----------------------------------------------------------------------------

usbjtag is free software; you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

usbjtag is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software 
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA

-----------------------------------------------------------------------------

IMPORTANT: The code and information herein is NOT sufficient to build a 
device that can be used exactly like an "Altera USB Blaster". I have only
included code here that is purely my own work or taken from Cypress library
for the FX2 firmware. I do not include any copy of Altera code or data, such as
the content of the EEPROM that configures the USB controller of their product
(containing USB vendor and product ID and some more data). But that would be
required if you want something compatible with their software. 

Please do not ask me about such data. The code presented here is interesting
enough even if used without Altera software. If you include support for this
device in your host software, please let me know, so I can mention it in this
README. And please be so kind to make your software compatible enough so it
could make use of an original Altera device as well!

-----------------------------------------------------------------------------

HISTORY: In my company, we just received first samples of a new hardware design
as a base for upcoming products; two major components of this design being a
Cypress EZ-USB FX2 USB controller and an Altera Cyclone EP1C12 FPGA. The FX2
implements the USB interface of the product; its first task after booting is to
configure the FPGA. The FPGA configuration data is sent from the USB host to
the FX2 and then via JTAG to the FPGA.

I had the idea to make the FX2 code less specific, i.e. turn it into a
general-purpose JTAG interface and move all the code specific to FPGA
configuration away from the FX2, up to the host PC. While developing a stripped
down FX2 firmware, it occured to me that its function in the end would become
similar to that of the USB JTAG adapter developed by Altera; just direct FPGA
signal control (bit banging) and fast parallel/serial conversion. The Altera
device obviously can't do more, because it consists of just an USB-Parallel
chip (FTDI FT245BM) and a small CPLD that can't do much more than
parallel/serial conversion for single bytes.  At that time, I took a look at
the Altera communication mechanisms and decided to write my code so it would
behave similar to their device.

I release the code for this homebrew firmware here in the fx2/ subdirectory.
The "usbjtag.c" file contains a descriptive text about the mechanism how the
host PC controls the JTAG chain via USB. For people who like to read VHDL
better than C or English, I also wrote cpld/jtag_logic.vhd. When synthesized
with Quartus II, its logic fits into an EPM7064 CPLD and can interface to a
FTDI FT245BM USB controller. Both variants haven't been gone through thorough
testing, so please do not consider it "production quality". I have used it
only for JTAG, and haven't tested ASMI (Active Serial) mode at all. Maybe some
more lines of code have to be added for ASMI.

-----------------------------------------------------------------------------

USB VENDOR/PRODUCT ID: I do not include any vendor/product ID and further
descriptor setup with the code here, because I myself don't have a vendor ID,
and I don't want to use Altera's (because this is not an Altera product). I'll
try to get permission to use my company's ID but that's not here yet.

-----------------------------------------------------------------------------

HARDWARE: Unfortunately, I do not have the time to present finished schematics
for either variant of the USB JTAG adapter. As the source is quite incomplete
anyway, if you're using it you're probably one of those people who easily can
make up their own schematics. In principle, they are like this (best viewed
with fixed-width font!). Add power supply, voltage regulator(s), level shifter,
termination resistors, and more, as required...

Variant A: Cypress FX2 as USB JTAG Adapter, booted from host PC (no EEPROM)

              ____________
             |            |
             | Cypress    |
        USB__| EZ-USB FX2 |__JTAG(TDI,TDO,TCK,TMS)
             | CY7C68013A |
             |____________|
              __|__________
             |             |
             | 24 MHz XTAL |
             |_____________|


Variant B: FTDI FT245BM plus EEPROM 93C46 plus CPLD EPM7064

              _________
             |         |
             | AT93C46 |
             |_________|
              __|__________    _________
             |             |  |         |
        USB__| FTDI 245BM  |__| EPM7064 |__JTAG (B_TDO,B_TDI,B_TMS,B_TCK)
             |_____________|  |_________|
              __|__________    _|___________
             |             |  |             |
             | 6 MHz XTAL  |  | 25 MHz Osc. |
             |_____________|  |_____________|

-----------------------------------------------------------------------------

Kolja Waschk, April 2006

